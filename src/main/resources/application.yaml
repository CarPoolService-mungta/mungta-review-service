server:
  port: 8086

---

#springdoc:
#  swagger-ui:
#    operationsSorter: method

spring:
  config:
    activate:
      on-profile: local
  datasource:
    jdbc-url: jdbc:mysql://review-service-db.mysql.database.azure.com:3306/review_dev?serverTimezone=Asia/Seoul&validationQuery="select 1"
    username: mungta
    password: andxk12#$
    driver-class-name: com.mysql.cj.jdbc.Driver
    hikari:
      auto-commit: false
      connection-test-query: SELECT 1
      maximum-pool-size: 20
      transaction-isolation: TRANSACTION_READ_UNCOMMITTED
      pool-name: munta-question
  jpa:
#    hibernate:
#      ddl-auto: update
    properties:
      hibernate:
        format_sql: true
        temp:
          use_jdbc_metadata_defaults: false
#    generate-ddl: true
    show-sql: true
    database-platform: org.hibernate.dialect.MySQL8InnoDBDialect
  mvc:
    pathmatch:
      matching-strategy: ant_path_matcher
#cloud:
#    stream:
#      kafka:
#        binder:
#          brokers: localhost:29092
#        streams:
#          binder:
#            configuration:
#              default:
#                key:
#                  serde: org.apache.kafka.common.serialization.Serdes$StringSerde
#                value:
#                  serde: org.apache.kafka.common.serialization.Serdes$StringSerde
#      bindings:
#        event-in:
#          group: pet
#          destination: petstore
#          contentType: application/json
#        event-out:
#          destination: petstore
#          contentType: application/json

logging:
  level:
    org.hibernate.type: trace
    org.springframework.cloud: debug
    com.example.accusation: debug

api:
  url:
    user: http://localhost:8081/mungta/users
    party: http://localhost:8082/mungta/parties

---

spring:
  profiles: docker
#  cloud:
#    stream:
#      kafka:
#        binder:
#          brokers: kafka:9092
#        streams:
#          binder:
#            configuration:
#              default:
#                key:
#                  serde: org.apache.kafka.common.serialization.Serdes$StringSerde
#                value:
#                  serde: org.apache.kafka.common.serialization.Serdes$StringSerde
#      bindings:
#        event-in:
#          group: pet
#          destination: petstore
#          contentType: application/json
#        event-out:
#          destination: petstore
#          contentType: application/json

api:
  url:
    user: http://gateway:8080
    party: http://gateway:8080
